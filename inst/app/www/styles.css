
/* Set the box-sizing property to border-box for the entire document */
html {
  box-sizing: border-box;
}

/* Set the box-sizing property to inherit for all elements, including before and after pseudo-elements */
*, *:before, *:after {
  box-sizing: inherit;
}

/* Set the background color to an RGBA value of 225, 223, 221 with a transparency of 0.2. Sets the minimum height of the body to 611px and remove the margin */
body {
  background-color: rgba(225, 223, 221, 0.2);
  min-height: 611px;
  margin: 0;
}

/* This sets the color of all links */
a {
  color: #953386;
}

/* Set the grid area to header and the background color to white for an element with a class of header. 
It also sets the padding to 6px for the top, 0px for the right, 11px for the bottom, and 10px for the left. */
.header {
  grid-area: header;
  background-color: #fff;
  padding: 6px 0px 11px 10px;
}

/* Set the grid area to header and the background color to white for an element with a class of header. 
It also sets the padding to 6px for the top, 0px for the right, 11px for the bottom, and 10px for the left. 
.header2 {
  grid-area: header2;
  background-color: #fff;
  padding: 6px 0px 11px 10px;
} */

/* .sticky {
  position: fixed;
  top: 0;
  width: 100%;
} */

/* .sticky + .content {
  padding-top: 102px;
} */


/* Set the grid area to title2 and the background color to #a2b21e for an element with a class of title2 */
.title2 {
  grid-area: title2;
  background-color: #a2b21e;
}

/* This sets the top margin to 11px for an element with a class of menu */
.menu {
  margin-top: 11px;
}

/* This sets the background color to red for an element with a class of another-one */
.another-one {
  background: red;
}

/* This sets the grid area to main and the background color to #faf9f8 for an element with a class of main. 
It also sets the padding to 2rem for the top, bottom, left, and right. */
.main {
  grid-area: main;
  background-color: #faf9f8;
  padding-left: 2rem;
  padding-right: 2rem;
  padding-top: 2rem;
  padding-bottom: 2rem;
}

/* This sets the background color to #241b3e and border color to #241b3e for an element with a class of buttons-tab2. It also sets the transition timing function. 
The hover style changes the background color and border color to #953386. */
.buttons-tab2 {
  background: #241b3e;
  border: 1px solid #241b3e;
  transition: background .3s ease;
}

.buttons-tab2:hover {
  background: #953386;
  border: 1px solid #953386;
  transition: background .3s ease;
}

/* Defines a class .button-help-green with a light green background color and a transition of 0.3 seconds when the background color changes. */
.button-help-green {
  background: #c6cf78ff;
  transition: background .3s ease;
}

/* Defines a class .button-help-grey with a light grey background color and a transition of 0.3 seconds when the background color changes. */
.button-help-grey {
  background: #e9ecefff;
  transition: background .3s ease;
}

/* Defines a hover state for the .button-help-green class, where the background color changes to a darker green color when the user hovers over it. */
.button-help-green:hover {
  background: #a2b21e;
  transition: background .3s ease;
}

/* Defines a hover state for the .button-help-grey class, where the background color changes to a darker grey color when the user hovers over it. */
.button-help-grey:hover{
  background: #dadada;
  transition: background .3s ease;
}


/* Defines a class .icon-help with a font size of 19 pixels. */
.icon-help {
  font-size: 19px;
}

/* Defines a class .icon-help-grey with a grey color for the icon and a font size of 19 pixels. */
.icon-help-grey {
  color: #a19f9d !important;
  font-size: 19px;
}

/* Defines a class .icon-tab2 with a light color for the icon, a font weight of 500, and a font size of 21 pixels. */
.icon-tab2 {
  color: #f3f2f1;
  font-weight: 500;
  font-size: 21px;
}

/* Defines a class .ms-Slider-inactive with a dark purple color for the background. */
.ms-Slider-inactive {
  background: #241b3e;
}

/* Defines a hover state for the .ms-Slider-slideBox class, where the background color for the .ms-Slider-inactive class changes to a lighter purple color when the user hovers over it. */
.ms-Slider-slideBox:hover .ms-Slider-inactive {
  background: #953386;
}

/* Defines a class .ms-Slider-active with a light purple color for the background. */
.ms-Slider-active {
  background: #953386;
}

/* Defines a hover state for the .ms-Slider-slideBox class, where the background color for the .ms-Slider-active class changes to a lighter purple color when the user hovers over it. */
.ms-Slider-slideBox:hover .ms-Slider-active{
  background: #953386;
}

/* Defines a hover state for the .ms-Slider-slideBox class, where the border for the .ms-Slider-thumb class changes to a solid 2px purple color when the user hovers over it. */
.ms-Slider-slideBox:hover .ms-Slider-thumb {
  border: 2px solid #953386;
}

/* Defines a class .ms-Icon with a font weight of 600 and a black color for the icon. */
.ms-Icon {
  font-weight: 600;
  color: #000000;
}

/* Defines a class .is-disabled with grey background color and a solid border of 1px.
the background changes with a transition period of 0.5s */
.is-disabled {
  background: #a19f9d;
  border: 1px solid #a19f9d;
  transition: background .5s ease;
}

/* The .ms-BasePicker-text class is being defined with some styles.
The background color is set to white. The minimum height is set to 33px. */
.ms-BasePicker-text {
  background: white;
  min-height: 33px;
}

/* The .ms-Label class is being defined with some styles.
The font size is set to 17px. The text alignment is centered. */
.ms-Label {
  font-size: 17px;
  text-align: center;
}

/* The .tt-menu class is being defined with some styles. The background color is set to white. A padding of 5px is added around the content inside the element.
A border is added with a width of 1px and a color of rgb(170, 170, 170). The line height is set to 25px. */
.tt-menu {
  background: white;
  padding: 5px;
  border: 1px solid rgb(170, 170, 170);
  line-height: 25px;
}

/* The .tt-suggestion class is being defined with a style. A left padding of 11px is added to the element. */ 
.tt-suggestion {
  padding-left: 11px;
}

/* The .tt-suggestion:hover and .tt-cursor classes are being defined with a style.
When the mouse is hovering over the element with the .tt-suggestion class or when the element has the .tt-cursor class, the background color is set to #eee. */
.tt-suggestion:hover, .tt-cursor {
  background: #eee;
}

/* The .tt-header class is being defined with some styles. A padding of 0px on the top and bottom and 11px on the left and right is added to the element.
The font size is set to 14px. The color of the text is set to rgb(0, 120, 212). The line height is set to 40px.
A bottom border is added with a width of 1px and a color of rgb(237, 235, 233). */
.tt-header {
    padding: 0px 11px;
    font-size: 14px;
    color: rgb(0, 120, 212);
    line-height: 40px;
    border-bottom: 1px solid rgb(237, 235, 233);
}

/* The .logo class is being defined with some styles. The width of the element is set to 129px. The height of the element is set to 30px. */
.logo {
  width: 129px;
  height: 30px;
}



/*  The following styles apply only when the screen width is at least 320 pixels */
@media only screen and (min-width: 320px) {
  
/* The first style applies to an element with a class of .grid-container. 
It sets it to use CSS Grid for layout, with a 3-row, 2-column grid where the first column has no width and the second column takes up 100% of the available space. 
The grid also specifies 3 areas and sets the height to be 100% of the viewport height.
Change column widths when navbar is used!*/
  .grid-container {
    display: grid;
    grid-template-columns: 0% 100%;
    grid-template-rows: 54px 77px 1fr;
    grid-template-areas: "sidenav header" "sidenav title2" "sidenav main";
    height: 100vh;
  }
 
.header {
  grid-area: header;
  background-color: #fff;
  padding: 6px 0px 11px 10px;
}  
  
/* Set the grid area to header and the background color to white for an element with a class of header. 
It also sets the padding to 6px for the top, 0px for the right, 11px for the bottom, and 10px for the left. 
.header2 {
  grid-area: header2;
    display: none;
} */
 
 /* The next style targets an element with a class of .sidenav and sets its position to static, meaning it will not be positioned relative to its parent element. 
 It also sets its width to 0 and applies a dark purple background color, as well as some padding. */
  .sidenav {
    position: static;
    grid-area: sidenav;
    width: 0;
    background-color: #241b3e;
    padding-right: 0;
    padding-top: 2rem;
  } 
  

/* The remaining styles are commented out and appear to be an alternate implementation of the sidebar. 
The styles include a different grid layout, a different set of class names for the sidebar in both its closed and opened states, and different styles for various other elements such as .menu, .logo, and different card layouts.
  .grid-container {
    display: grid;
    grid-template-columns: 5% 95%;
    grid-template-rows: 54px 77px 1fr;
    grid-template-areas: "menu header" "sidenav title2" "sidenav main";
    height: 100vh;
  }
  
  .sidenav {
    position: absolute;
    grid-area: sidenav;
    background-color: #241b3e;
    width: 0;
    padding-top: 2rem;
    padding-right: 0;
    transition: width .5s ease-out;
    z-index: 2;
    top: 54px;
  }
  
  .sidenav-opened {
    position: absolute;
    grid-area: sidenav;
    width: 250px;
    padding-top: 2rem;
    padding-right: 0;
    transition: width .5s ease-in;
    z-index: 2;
    top: 54px;
    border-radius: 7px;
  } 
  
  .main-opened {
    z-index: 1;
    opacity: .5;
    transition: opacity .5s;
  }  */
  
  
/* This is a selector for an element with a class of title2-opened. It sets the opacity of the element to 50% (or semi-transparent) and 
a transition effect for the opacity property over a duration of 0.5 seconds. */
  .title2-opened {
    opacity: .5;
    transition: opacity .5s;
  }
  
/* It sets the left margin of the element of class .title2 to 0 pixels. */
  .title2 {
    margin-left: 0;
  }
  
/* This sets the display property of the element to block. It sets the grid-area property of the element to menu and the width of the element to 0 pixels. */
  .menu {
    display: block;
    grid-area: menu;
    width: 0;
  } 
  
/* This is a CSS selector for an element with a class of logo. It sets the width of the element to 180 pixels and the height of the element to 42 pixels. */
  .logo {
    width: 180px;
    height: 42px;
  }
  
/* .one-card: This is a CSS selector for an element with a class of one-card. 
display: grid;: This sets the display property of the element to grid.
grid-template-columns: 100%;: This sets the grid template to have a single column that takes up the full width of the element.
margin-bottom: 20px;: This sets the bottom margin of the element to 20 pixels. */
  .one-card {
    display: grid;
    grid-template-columns: 100%;
    margin-bottom: 20px;
  }
  
/* .two-cards: This is a CSS selector for an element with a class of two-cards.
display: grid;: This sets the display property of the element to grid.
grid-template-columns: 100%;: This sets the grid template to have a single column that takes up the full width of the element.
row-gap: 10px;: This sets the gap between rows in the grid to 10 pixels.
margin-bottom: 20px;: This sets the bottom margin of the element to 20 pixels. */
  .two-cards {
    display: grid;
    grid-template-columns: 100%;
    row-gap: 10px;
    margin-bottom: 20px;
  }
  
/* .two-cards-33-66: This class defines a grid container that displays two cards with a 33% width and 66% width, with a 10px gap between the rows, and a margin-bottom of 20px. The CSS properties defined for this class are:
display: grid: This sets the display property of the element to "grid".
grid-template-columns: 100%: This sets the number and size of the columns in the grid. In this case, there is only one column with 100% width.
row-gap: 10px: This sets the size of the gap between the rows in the grid.
margin-bottom: 20px: This sets the margin at the bottom of the element. */
  .two-cards-33-66 {
    display: grid;
    grid-template-columns: 100%;
    row-gap: 10px;
    margin-bottom: 20px;
  }
  
/* .three-cards: This class defines a grid container that displays three cards with a 100% width and a 10px gap between the rows, and a margin-bottom of 20px. The CSS properties defined for this class are:
display: grid: This sets the display property of the element to "grid".
grid-template-columns: 100%: This sets the number and size of the columns in the grid. In this case, there is only one column with 100% width.
row-gap: 10px: This sets the size of the gap between the rows in the grid.
margin-bottom: 20px: This sets the margin at the bottom of the element. */
  .three-cards {
    display: grid;
    grid-template-columns: 100%;
    row-gap: 10px;
    margin-bottom: 20px;
  }
  
/*
  .mod-evol-slider-col1 {
    width: 0;
  }
  
  .mod-evol-slider-col2 {
    width: 90%;
  }
  
  .mod-evol-search1 {
    width: 5%;
  }
  
  .mod-evol-search2 {
    width: 85%;
  } */
}



/*  The following styles apply only when the screen width is at least 480 pixels */
@media only screen and (min-width: 480px) {

/* This class selector targets elements with the class two-cards.
The selected elements will be displayed as a grid. The grid layout will have a single column that takes up 100% of the available space. */
  .two-cards {
    display: grid;
    grid-template-columns: 100%;
  }

/* This class selector targets elements with the class three-cards.
The selected elements will be displayed as a grid. The grid layout will have a single column that takes up 100% of the available space. */
  .three-cards {
    display: grid;
    grid-template-columns: 100%;
  }
  
/* This class selector targets elements with the class mod-evol-search1.
The selected elements will have a width of 20% of their parent container. */
  .mod-evol-search1 {
    width: 20%;
  }
  
/* This class selector targets elements with the class mod-evol-search2.
The selected elements will have a width of 40% of their parent container. */
  .mod-evol-search2 {
    width: 40%;
  }
}



/*  The following styles apply only when the screen width is at least 768 pixels */
@media only screen and (min-width: 768px) {

/* The first style applies to an element with a class of .grid-container. 
It sets it to use CSS Grid for layout, with a 3-row, 2-column grid where the first column (sidebar) has a width of 25% of the available space and the second column (main part) takes up 75%. 
The grid also specifies 3 areas and sets the height to be 100% of the viewport height. */
  .grid-container {
    display: grid;
    grid-template-columns: 25% 75%;
    grid-template-rows: 0px 77px 1fr;
    grid-template-areas: "sidenav header" "sidenav title2" "sidenav main";
    height: 100vh;
  }

/* Set the grid area to header and the background color to white for an element with a class of header. 
It also sets the padding to 6px for the top, 0px for the right, 11px for the bottom, and 10px for the left. */
.header {
  grid-area: header;
  height: 0px;
  width: 0px;
}
  
/* Set the grid area to header and the background color to white for an element with a class of header. 
It also sets the padding to 6px for the top, 0px for the right, 11px for the bottom, and 10px for the left. 
.header {
    display: none;
} */

/* Set the grid area to header and the background color to white for an element with a class of header. 
It also sets the padding to 6px for the top, 0px for the right, 11px for the bottom, and 10px for the left. 
.header2 {
  grid-area: header2;
  background-color: #fff;
  padding: 6px 0px 11px 10px;
} */
 
 /* The next style targets an element with a class of .sidenav and sets its position to static, meaning it will not be positioned relative to its parent element. 
 It also sets its width to 100% (First column is completely used) and applies a dark purple background color, as well as some padding. */
  .sidenav {
    position: static;
    grid-area: sidenav;
    width: 100%;
    background-color: #241b3e;
    padding-right: 0;
    padding-top: 2rem;
  }

/* It sets the left margin of the element of class .title2 to 0 pixels. */
  .title2 {
    margin-left: 0;
  }

/* It sets the padding-left of the element of class .main to 2rem and left margin to 0. */
  .main {
    padding-left: 2rem;
    margin-left: 0;
  }
  
/* Defines the style rules for elements with the class name .menu. Sets the grid area to menu. 
Hides the element by setting the display property to none */
  .menu {
    grid-area: menu;
    display: none;
  }

/* Defines the style rules for elements with the class name .logo. Sets the width to 210px and the height to 49px */
  .logo {
    width: 210px;
    height: 49px;
  }
  
/*  .header {
    font-weight: 800;
    font-size: 21px;
} */
}


/*  The following styles apply only when the screen width is at least 992 pixels */
@media only screen and (min-width: 992px) {

/* The first style applies to an element with a class of .grid-container. 
It sets it to use CSS Grid for layout, with a 3-row, 2-column grid where the first column (sidebar) has a width of 20% of the available space and the second column (main part) takes up 80%. 
The grid also specifies 3 areas and sets the height to be 100% of the viewport height. */
  .grid-container {
    display: grid;
    grid-template-columns: 20% 80%;
    grid-template-rows: 54px 77px 1fr;
    grid-template-areas: "sidenav header" "sidenav title2" "sidenav main";
    height: 100vh;
  }
  
  .one-card {
    margin-bottom: 2%;
  }
  
/* This class selector targets elements with the class two-cards.
The selected elements will be displayed as a grid. The grid layout will have three columns (first card: 47.5%, space of 5%, second card: 47.5%). */
  .two-cards {
    display: grid;
    grid-template-columns: 47.5% 5% 47.5%;
    margin-bottom: 2%;
  }
  
/* This class selector targets elements with the class two-cards-33-66.
The selected elements will be displayed as a grid. The grid layout will have three columns (first card: 33%, space of 5%, second card: 62%). 
Also sets a gap of 10px between the rows and sets the bottom margin to 20px.*/
  .two-cards-33-66 {
    display: grid;
    grid-template-columns: 33% 5% 62%;
    row-gap: 10px;
    margin-bottom: 20px;
  }
  
/*  Selects an element with a class of two-cols and sets it to display as a grid with three columns, each taking up 49.25%, 1.5%, and 49.25% of the available width respectively. 
Also sets the grid template areas to "methods-card1 methods-gap methods-card2" for the first row and "methods-card1 methods-gap methods-card3" for the second row. */
  .two-cols {
    display: grid;
    grid-template-columns: 49.25% 1.5% 49.25%;
    grid-template-areas: "methods-card1 methods-gap methods-card2" "methods-card1 methods-gap methods-card3";
  }
  
/* Selects an element with a class of methods-card1 and sets its grid area to methods-card1. */
  .methods-card1 {
    grid-area: methods-card1
  }
  
/* Selects an element with a class of methods-card2 and sets its grid area to methods-card2. */
  .methods-card2 {
    grid-area: methods-card2
  }

/* Selects an element with a class of methods-card3 and sets its grid area to methods-card3. */
  .methods-card3 {
    grid-area: methods-card3
  }
  
/* Selects an element with a class of methods-gap and sets its grid area to methods-gap. */
  .methods-gap {
    grid-area: methods-gap
  }
  
/* Selects an element with a class of three-cards and sets it to display as a grid with a single column taking up 100% of the available width. 
Also sets the bottom margin to 2%. */ 
  .three-cards {
    display: grid;
    grid-template-columns: 100%;
    margin-bottom: 2%;
  }

/* .browse-cards class defines a grid container for a set of cards with a row gap of 33px and a single column that spans the entire width of its parent element. */
  .browse-cards {
    display: grid;
    row-gap: 33px;
    grid-template-columns: 100%;
  }
 
/* .tab2-box4 class sets the width of an element to 91.66% of its parent element. */
  .tab2-box4 {
    width: 91.66%;
  }

/* The .mod-evol-slider-col1 class sets the width of an element to 30% of its parent element. */
  .mod-evol-slider-col1 {
    width: 30%;
  }

/* The .mod-evol-slider-col2 class sets the width of an element to 28.3333% of its parent element. */
  .mod-evol-slider-col2 {
    width: 28.3333%;
  }
}



/*  The following styles apply only when the screen width is at least 1200 pixels */
@media only screen and (min-width: 1200px) {
  .grid-container {
    display: grid;
    grid-template-columns: 15% 85%;
    grid-template-rows: 54px 77px 1fr;
    grid-template-areas: "sidenav header" "sidenav title2" "sidenav main";
    height: 100vh;
  }

/* Defines the style rules for elements with the class name .menu. Sets the grid area to menu. 
Hides the element by setting the display property to none */
  .menu {
    grid-area: menu;
    display: none;
  }
  
  .one-card {
    margin-bottom: 1.7%;
  }

/* This class selector targets elements with the class two-cards.
The selected elements will be displayed as a grid. The grid layout will have three columns (first card: 48.5%, space of 3%, second card: 48.5%). */
  .two-cards {
    display: grid;
    grid-template-columns: 48.5% 3% 48.5%;
    margin-bottom: 1.7%;
  }

/* This class selector targets elements with the class two-cards-33-66.
The selected elements will be displayed as a grid. The grid layout will have three columns (first card: 32%, space of 3%, second card: 65%). 
Also sets a gap of 10px between the rows and sets the bottom margin to 20px.*/
  .two-cards-33-66 {
    display: grid;
    grid-template-columns: 32% 3% 65%;
    margin-bottom: 1.7%;
  }

/* Selects an element with a class of three-cards and sets it to display as a grid with three columns with widths of 32% and two colument with widths of 2% to separate them.
The bottom margin of the element to 1.7% of its height. */
  .three-cards {
    display: grid;
    grid-template-columns: 32% 2% 32% 2% 32%;
    margin-bottom: 1.7%;
  }

 /* .start-cards is a class selector for a container element that will have a grid layout. 
This container element will use grid layout. The gap size between columns is 27 pixels. The gap size between rows is 27 pixels.
The column widths are set to 49% each */
  .start-cards {
    display: grid;
    column-gap: 27px;
    row-gap: 27px;
    grid-template-columns: 49% 49%;
  }

/* .browse-cards is a class selector for a container element that will have a grid layout.
This container element will use grid layout. Tthe gap size between columns is 33 pixels.
The column widths are to 31.4%, 31.33%, and 31.31%. */
  .browse-cards {
    display: grid;
    column-gap: 33px;
    grid-template-columns: 31.4% 31.33% 31.31%;
  }
 
/* .tab2-box4 is a class selector for an element that will have a specific width.
width: calc(91.5% + 66px) sets the width to a calculated value, where the width is 91.5% of the parent element's width plus an additional 66 pixels. */
  .tab2-box4 {
    width: calc(91.5% + 66px);
  }

/* .tab3-box3 is a class selector for an element that will have a specific width.
width: calc(94% + 27px) sets the width to a calculated value, where the width is 94% of the parent element's width plus an additional 27 pixels. */
  .tab3-box3 {
    width: calc(94% + 27px);
  }
}


  
/*  The following styles apply only when the screen width is at least 1450 pixels */
@media only screen and (min-width: 1450px) {
  
/* This class selector targets elements with the class two-cards.
The selected elements will be displayed as a grid. The grid layout will have three columns (first card: 49.2%, space of 1.6%, second card: 49.2%). */
  .two-cards {
    display: grid;
    grid-template-columns: 49.2% 1.6% 49.2%;
    margin-bottom: 1.7%;
  }
 
/* This class selector targets elements with the class two-cards-33-66.
The selected elements will be displayed as a grid. The grid layout will have three columns (first card: 34.3%, space of 1.6%, second card: 64.2%). */
  .two-cards-33-66 {
    display: grid;
    grid-template-columns: 34.2% 1.6% 64.2%;
    margin-bottom: 1.7%;
  }

/* Selects an element with a class of three-cards and sets it to display as a grid with three columns with widths of 32.3% and two colument with widths of 1.55% to separate them.
The bottom margin of the element to 1.7% of its height. */
  .three-cards {
    display: grid;
    grid-template-columns: 32.3% 1.55% 32.3% 1.55% 32.3%;
    margin-bottom: 1.7%;
  }  
}


/* .footer {
  grid-area: footer;
  background-color: #f3f2f1;
  padding: 12px 20px;
} */

/*  Specifies a grid container with two columns, with the first column taking 70% of the available width, and the second column taking 30% of the available width. 
The content of the first column is given the grid area name 'text' and the content of the second column is given the grid area name 'dropdown'. */
.grid-p1-b3-b4 {
    display: grid;
    grid-template-columns: 70% 30%;
    /*grid-template-rows: 54px 77px 1fr;*/
    grid-template-areas: "text dropdown";
  }

/* Specifies the padding of the title element as 52px on top and bottom and 0px on left and right. */
.page-title {
  padding: 52px 0px;
}

/* Specifies a styled box element with a light gray background, 28px of padding, 2px of border-radius, and background-clip set to padding-box. */
.card {
  background: #e9ecefff;
  padding: 28px;
  border-radius: 2px;
  background-clip: padding-box;
}

/* Specifies the color of the navigation text to be black when hovering over the element. */
.ms-Nav-compositeLink:hover .ms-Nav-linkText {
  color: #000;
}

/* Specifies the color of the selected navigation text to be black. */
.is-selected .ms-Nav-linkText {
  color: #000;
}

/* Specifies the alignment of the search element to be at the top of its parent container and its border to be a 2px solid line with a light gray color. */ 
.rt-search {
  align-self: flex-start !important;
  border: 2px solid #aaa !important;
}

/* Specifies the background color of the ReactTable element to be a light gray. */
.ReactTable {
  background-color: #e9ecef !important;
}

/* hide select all checkbox reactable */
/* Specifies that the checkbox element should be hidden. */
.hide-checkbox {
  pointer-events: none;
}

/* Specifies the display of the checkbox element to be none, hiding it from view. */
.hide-checkbox input[type='checkbox'] {
  display: none;
}

/* .linkText-73 {
  color: #fff;
} */










